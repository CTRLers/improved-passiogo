require 'test_helper'

class MessageTest < ActiveSupport::TestCase
  setup do
    @user = users(:one)  # Assuming you have a user fixture
  end

  test "should create a valid message" do
    message = Message.new(
      user: @user,
      content: "Test message content",
      message_type: "default"
    )
    assert message.valid?
    assert message.save
  end

  test "should not create message without user" do
    message = Message.new(
      content: "Message without user",
      message_type: "default"
    )
    refute message.valid?
    assert_includes message.errors[:user], "must exist"
  end

  test "should not create message without content" do
    message = Message.new(
      user: @user,
      message_type: "default"
    )
    refute message.valid?
    assert_includes message.errors[:content], "can't be blank"
  end

  test "should not create message without message type" do
    message = Message.new(
      user: @user,
      content: "Test message"
    )
    refute message.valid?
    assert_includes message.errors[:message_type], "can't be blank"
  end

  test "should allow optional route association" do
    route = routes(:one)  # Assuming you have a route fixture
    message = Message.new(
      user: @user,
      content: "Message with route",
      message_type: "default",
      route: route
    )
    assert message.valid?
    assert message.save
  end

  test "should create message with route" do
    route = routes(:one)
    message = Message.new(
      user: @user,
      content: "Routed message",
      message_type: "default",
      route: route
    )
    assert message.valid?
    assert message.save
    assert_equal route, message.route
  end
end
